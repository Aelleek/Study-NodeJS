● 간단한 웹 서버 만들기.
  - 노드의 기본으로 들어 있는 http 모듈을 사용하면 웹 서버 기능을 담당하는 서버 객체를 만들 수 있다.
    http 모듈의 객체에는 createServer() 메소드가 정의되어 있어서 이 메소드를 호출하면 서버 객체를 만들 수 있다.

  ○ server 객체
    - listen(port,[hostname],[backlog],[callback])		: 서버를 실행하여 대기시킨다.
    - close([callback])									: 서버를 종료한다.

    hostname : PC나 서버에 이더넷카드가 여러 개 있는 경우에는 서버에서 사용할 수 있는 IP 주소가 여러 개 존재한다. 이렇게 IP주소가 여러개 있을 경우에는 listen() 메소드의 host로 IP 주소를 지정해주어 연결할 수 있다.
    back :  실질적으로 동시 접속 연결 수를 결정하는 정보.

  ○ server 객체에서 사용할 수 있는 주요 이벤트  
    - connection()	: 클라이언트가 접속하여 연결이 만들어질 때 발생하는 이벤트
    - request() 	: 클라이언트가 요청할 때 발생하는 이벤트
    - close()		: 서버를 종료할 때 발생하는 이벤트


  ○ res 객체의 메소드
    - writeHead(statusCode, [statusMessage], [headers])	: 응답으로 보낼 헤더를 만든다.
    - write(chunk, [encoding], [callback])				: 응답 본문 데이터를 만든다. 여러 번 호출될 수 있다.
    - end([data],[encoding],[callback])					: 클라이언트로 응답을 전송한다. 파라미터에 데이터가 들어 있다면 이 데이터를 포함하여 응답을 전송한다. 

    end() 메소드는 응답을 모두 보냈다는 것을 의미하며, 보통 end() 메소드가 호출될 때 클라이언트로 응답을 전송한다.


● GET 방식과 POST 방식의 차이
  - 웹 서버에 요청을 보내는 방식은 GET,POST .. 등 여러가지가 있다.
    인터넷 표준으로 정해 둔 이러한 요청 방식을 메소드라고도 부른다.
    HTTP 요청 포맷을 보면 크게 헤더(Header)와 본문(Body) 부분으로 나뉘는데 
    GET 방식은 헤더 부분에 요청 정보들을 넣어 보내고 POST 방식은 본문 부분에 요청 정보를 넣어 보낸다.
    이 두 가지 방식은 요청 정보를 보낸다는 점에서는 같지만 보안 등의 이슈나 파일을 요청 정보로 넣어 보내야 하는 경우에는 POST 방식을 주로 사용한다.