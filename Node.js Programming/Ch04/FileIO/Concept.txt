● 파일 다루기
  - 노드에서 파일 시스템은 파일을 다루는 기능과 디렉토리를 다루는 기능으로 구성되어 있다. 또한 동기식 IO와 비동기식 IO 기능을 함께 제공한다.

  동기식 IO는 파일 작업이 끝날 때까지 대기하며, 비동기식 IO는 파일 작업을 요청만 하고 그 다음 작업을 바로 수행한다.
  이후 파일 작업이 끝나면 그 상태는 이벤틀 받아서 처리한다.
  비동기식과 동기식의 구분은 메소드에 Sync라는 단어로 구분한다.
  Sync라는 단어가 있으면 동기식 IO !


○ fs 모듈
  - readFile(filename, [encoding], [callback])					: 비동기식 IO로 파일을 읽어 들인다.
  - writeFile(filename, data, encoding="utf8", [callback])		: 비동기식 IO로 파일을 쓴다.

  - readFileSync(filename, [encoding])							: 동기식 IO로 파일을 읽어들인다.
  - writeFileSync(filename, data, encoding="utf8")				: 동기식 IO로 파일을 쓴다.

  대부분은 비동기 방식으로 파일을 읽고 쓰기 때문에 비동기 방식의 메소드를 주로 사용한다.


  파일을 직접 열고 닫으면서 읽거나 쓰고 싶은경우 사용하는 메소드
  - open(path,flags,[mode],[callback])					: 파일을 연다.
  - read(fd,buffer,offset,length,position,[callback])	:	지정한 부분의 파일 내용을 읽어 들인다.
  - write(fd,buffer,offset,length,position,[callback])	:	파일의 지정한 부분에 데이터를 쓴다.
  - close(fd, [callback])								: 파일을 닫는다.

  ○ flag
  - r 	: 읽기 , 파일이 없으면 에러가 발생한다.
  - w 	: 쓰기 , 파일이 없으면 만들어지고 파일이 있으면 기존의 내용을 모두 삭제한다.
  - w+	: 읽기와 쓰기, 파일이 없으면 만들어지고 파일이 있으면 이전 내용을 모두 삭제한다.
  - a+	: 읽기와 추가, 파일이 없으면 만들어지고 파일이 있으면 기존 내용에 새로운 내용을 추가한다.


  ○ fs 모듈로 디렉토리 만들고 삭제하기.
  - fs 모듈은 파일과 디렉토리를 다루는 여러 가지 메소드를 포함하고 있다.