● 배열
  - 배열은 여러개의 데이터를 하나의 변수에 담아둘 수 있다. 배열안에 들어있는 요소들은 []를 통해 접근할 수 있다.
    index 번호는 0번부터 시작한다.

    처음에 배열을 정의할때 할당하는 값 이외의 새로운 데이터는 push() 메소드를 통해 추가할 수 있다.
    배열에 들어있는 요소의 개수는 length 속성을 통해 확인할 수 있다.



○ 배열에 값 추가 또는 삭제하는 메소드.
  - push(Object)	: 배열의 끝에 요소를 추가한다.
  - pop()			: 배열의 끝에 있는 요소를 삭제한다.
  - unshift()		: 배열의 앞에 요소를 추가한다.
  - shift()			: 배열의 앞에 있는 요소를 삭제한다.
  - splice(index,removeCount,[Object]) : 여러 개의 객체를 요소로 추가하거나 삭제한다.
  - slice(index, copyCount) : 여러 개의 요소를 잘라내어 새로운 배열 객체를 생성한다.


○ forEach() 	arr.forEach(callback[, thisArg]);

  - forEach() 메서드는 주어진 함수를 배열 요소 각각에 대해 실행한다.


○ splice()		splice(index,removeCount,[Object])

  - index : 처리를 시작할 index 번호
  - removeCount : 삭제할 요소의 개수
  - [Object] : 추가할 객체의 정보

  ary.splice(0,1) 	: ary 배열의 0번방부터 1개의 데이터를 삭제한다.
  ary.splice(0,0,Object) : ary 배열의 0번방부터 0개의 데이터를 삭제하고 0번방에 Object 객체의 정보를 담는다.
  ary.splice(0,1,Object) : ary 배열의 0번방부터 1개의 데이터를 삭제한 후에 0번방에 Object 객체의 정보를 담는다.


○ slice()		slice(index, copyCount)

  - index : 처리를 시작할 index 번호
  - copyCount : 복사할 객체의 개수

  ary.slice(0,1)	: ary 배열의 0번방부터 1개의 데이터를 복사하여 반환한다.
  ary.slice(1)		: ary 배열의 1번방부터 복사하여 반환한다.