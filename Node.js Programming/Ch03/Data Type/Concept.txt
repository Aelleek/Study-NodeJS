p82

● 자바스크립트의 객체와 함수.

  - C언어나 Java언어 같은 타입 기반의 언어는 메모리를 절약하기 위해 변수를 할당할 때 변수의 타입(자료형)을 지정해준다.
    그러나 자바스크립트는 자료형을 명시하지 않는다.

    자바스크립트에서는 모든 변수를 var 키워드로 선언하고 할당하여 사용한다.
    var a = 10;
    var b = '소녀시대';

    새로운 변수를 할당할 때, 실제로는 자료형에 따라 다른 크기의 변수 공간이 할당되지만 코드에서는 var만 사용하기 때문에 정확한 변수의 크기를 알 수 없다.
    이때문에 변수의 타입을 확인할 수 있도록 typeof() 연산자를 사용한다.


● 노드JS의 자료형

○ 기본 자료형

  - Boolean		: true와 false의 두 가지 값을 가지는 쟈료형

  - Number		: 64비트 형식의 IEEE 754 값이며 정수나 부동소수 값을 가지는 자료형
  				  NaN (숫자가 아님), +무한대(Number.MAX_VALUE), -무한대(Number.MIN_VALUE) 등의 상징적인 값을 가진다.

  - String		: 문자열 값을 가지는 자료형

○ undefined		: 값을 할당하지 않은 변수의 값

○ null			: 존재하지 않는 값을 가리키는 값

○ Object		: 객체를 값으로 가지는 자료형
				  객체는 속성들을 담고있는 Collection으로 볼 수 있으며, 대표적인 객체로 Array나 Data를 들 수 있다.



● undefined 와 null의 차이점

  - 자바스크립트에서 두 타입은 모두 값이 없음을 나타낸다.

    기본적으로 값이 할당되지 않은 변수는 undefined 타입이며, 그 변수의 값 또한 undefined 이다.
    정의되지 않은 것 즉, 초기화되어 있지 않거나 존재하지 않는 객체의 프로퍼티 그리고 할당되지 않은 배열의 원소값에 접근하려고 하면 undefined 값이 나타난다.
    undefined는 데이터 타입이자, 값을 나타낸다.

    var value; 와 같이 변수를 선언하면 value 변수는 초기값으로 undefined를 가진다.
    값을 할당하지 않았으므로 value의 타입도 undefined지만, 값 또한 undefined로 초기화된다.
    그렇기 때문에 undefined는 데이터 타입이면서 값인 것이다.
    
    null 타입 변수의 경우는 명시적으로 값이 비어있음을 나타내는데 사용한다.
    아무것도 참조하고 있지 않다라는 의미가 있으며 주로 객체를 담을 변수를 초기화할 때 많이 사용한다.
    null 역시 undefined와 마찬가지로 값이며 데이터 타입이다.
    하지만 undefined와 다르게 undefined는 변수를 선언만 하더라도 undefined로 할당되지만 null은 변수를 선언한 후에 null로 값을 초기화해줘야 한다.

    var nullVar = null;
    null은 보통 아무런 값을 갖지않음을 나타낼 때 사용한다. 값은 값인데 비어있는 값이다.
    전형적인 고유 값이며 객체, 숫자, 문자열에서 '값이 없음' no value를 가리킬 때 사용한다.

    * null은 값은 값이지만 값으로써 의미없는 특별한 값이 등록되어 있는것이고, undefined는 등록이 되어있지 않기 때문에 초기화도 정의도 되지 않은 것이다.
      undefined는 미리 선언된 전역변수(전역 객체의 프로퍼티)이며, null은 선언, 등록을 하는 키워드다.


    undefined와 null은 위와 같은 차이점이 있지만 포괄적으로는 둘다 값이 없음을 나타내고
    동등연산자(==)로 연산했을 때 두 값이 같은 값이라고 나온다. 그래서 두 값을 구별하기 위해서는 일치연산자(===)를 사용해야 한다.
































